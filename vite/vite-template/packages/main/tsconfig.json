{
  "compilerOptions": {
    /* 指定生成哪个模块系统代码 */
    "module": "esnext",
    /* 编译后的代码版本 */
    "target": "esnext",
    /* 是否生成map文件 */
    "sourceMap": false,
    /* 选择模块解析策略： 'node' (Node.js) or 'classic' (TypeScript pre-1.6)。默认是classic */
    "moduleResolution": "Node",
    /* 	忽略所有的声明文件（ *.d.ts）的类型检查 */
    "skipLibCheck": true,
    /* 启用所有严格类型检查选项 */
    "strict": true,
    /* 将每个文件做为单独的模块 （与 'ts.transpileModule' 类似） */
    "isolatedModules": true,
    /* 需要包含的类型声明文件名列表 vite/client 包含 import.meta.env 的类型声明 */
    "types" : ["vite/client"],
    /* 用于解析非相对模块名称的基目录 */
    "baseUrl": ".",
    /* 模块名到基于 baseUrl 的路径映射的列表 */
    "paths": {
      "/@/*": [
        "./src/*"
      ]
    },
  },
  /* 指定编译文件或排除指定编译文件 */
  "include": [
    "src/**/*.ts",
    "../../types/**/*.d.ts"
  ],
  /* 排除编译文件或排除指定编译文件 */
  "exclude": [
    "**/*.spec.ts",
    "**/*.test.ts"
  ]
}
